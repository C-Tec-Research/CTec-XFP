<Window x:Class="Xfp.UI.Views.PanelTools.ValidationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Xfp.UI.Views"
        xmlns:viewmodels="clr-namespace:Xfp.ViewModels.PanelTools.ValidationWindow" 
        xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
        xmlns:ctc="clr-namespace:CTecControls.UI;assembly=CTecControls"
        xmlns:ctcvh="clr-namespace:CTecControls.UI.ViewHelpers;assembly=CTecControls"
        xmlns:vh="clr-namespace:Xfp.UI.ViewHelpers"
        d:DataContext="{d:DesignInstance Type=viewmodels:ValidationWindowViewModel}"
        mc:Ignorable="d"
        Height="450" Width="500"
        MinHeight="200" MinWidth="250"
        BorderBrush="{StaticResource Brush03}" BorderThickness="1"
        ResizeMode="CanResize"
        WindowStyle="None"
        ShowInTaskbar="True"
        Title="{Binding Path=Data_Validation, Source={StaticResource Resources}}"
        Icon="/Resources/info.png"
        StateChanged="window_StateChanged"
        PreviewKeyDown="window_PreviewKeyDown"
        PreviewMouseWheel="window_PreviewMouseWheel" 
        Closing="window_Closing">

    <shell:WindowChrome.WindowChrome>
        <shell:WindowChrome CaptionHeight="20"
                            CornerRadius="0"
                            GlassFrameThickness="0"
                            NonClientFrameEdges="Bottom"
                            ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"/>
    </shell:WindowChrome.WindowChrome>

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <ctcvh:ErrorLevelOKToVisibilityConverter x:Key="ErrorLevelOKToVisibilityConverter"/>
        <ctcvh:ErrorLevelWarningToVisibilityConverter x:Key="ErrorLevelWarningToVisibilityConverter"/>
        <ctcvh:ErrorLevelErrorToVisibilityConverter x:Key="ErrorLevelErrorToVisibilityConverter"/>
        <ctcvh:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
        <ctcvh:ErrorLevelToBrushConverter x:Key="ErrorLevelToBrushConverter"/>
        <ctcvh:ErrorLevelToSvgPathDataConverter x:Key="ErrorLevelToSvgPathDataConverter"/>
        <ctcvh:NonZeroToVisibilityConverter x:Key="NonZeroToVisibilityConverter"/>
        <vh:ValidationCodeToStringConverter x:Key="ValidationCodeToStringConverter"/>
    </Window.Resources>

    <Border LayoutTransform="{Binding LayoutTransform}">

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" Width="7" Visibility="{Binding WindowIsMaximised, Converter={StaticResource BoolToVisibilityConverter}}"/>
            <Grid Grid.Column="3" Width="7" Visibility="{Binding WindowIsMaximised, Converter={StaticResource BoolToVisibilityConverter}}"/>
            <Grid Grid.Row="0" Height="7" Visibility="{Binding WindowIsMaximised, Converter={StaticResource BoolToVisibilityConverter}}"/>

            <Grid Grid.Row="1" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Background="{StaticResource Brush07}">
                    <Border Style="{StaticResource HeaderPanelControlsBorderi}" Height="15" Width="15" Margin="5,4,0,4">
                        <TextBlock Text="{Binding Path=Info_Abbr, Source={StaticResource Resources}}" 
                                   Style="{StaticResource HeaderPanelControlsInfoi}" 
                                   FontSize="12" 
                                   HorizontalAlignment="Center" VerticalAlignment="Center" 
                                   Padding="0" Margin="0,0,0,0"/>
                    </Border>
                    <TextBlock Text="{Binding Path=Data_Validation, Source={StaticResource Resources}}" 
                               Style="{StaticResource PopupTextTitle}" 
                               Foreground="{StaticResource Brush02}" 
                               FontSize="14"
                               VerticalAlignment="Center" Margin="5,0,5,0"/>
                </StackPanel>

                <!--#region control buttons -->
                <Grid Grid.Row="1" 
                      HorizontalAlignment="Right" VerticalAlignment="Top" 
                      Height="18" Margin="0">
                    <Grid.Style>
                        <Style>
                            <Style.Triggers>
                                <Trigger Property="Border.IsMouseOver" Value="False">
                                    <Setter Property="Border.Opacity" Value="0" />
                                </Trigger>
                                <Trigger Property="Border.IsMouseOver" Value="true">
                                    <Setter Property="Border.Opacity" Value="1" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid Background="{StaticResource Brush07}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0"
                                Width="30" Margin="0" 
                                BorderBrush="Transparent"
                                ToolTip="{Binding Path=Control_Button_Minimise, Source={StaticResource Resources}}"
                                Click="btnMinimise_Click">
                            <TextBlock Text="🗕" Margin="0,1,5,3" FontSize="13" Foreground="{StaticResource Brush03}"/>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,0,0"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{StaticResource Brush09}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="{StaticResource BrushControlButtonPressed}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Grid.Column="1" 
                                Width="30" Margin="0"
                                BorderBrush="Transparent"
                                ToolTip="{Binding Path=Control_Button_Maximise, Source={StaticResource Resources}}"
                                Visibility="{Binding WindowIsMaximised, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                Click="btnMaximise_Click">
                            <TextBlock Text="🗖" Margin="0,1,5,3" FontSize="13" Foreground="{StaticResource Brush03}"/>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,0,0"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{StaticResource Brush09}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="{StaticResource BrushControlButtonPressed}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Grid.Column="1"
                                Width="30" Margin="0" 
                                BorderBrush="Transparent"
                                ToolTip="{Binding Path=Control_Button_Restore, Source={StaticResource Resources}}"
                                Visibility="{Binding WindowIsMaximised, Converter={StaticResource BoolToVisibilityConverter}}"
                                Click="btnRestore_Click" >
                            <TextBlock Text="🗗" Margin="0,1,5,3" FontSize="13" Foreground="{StaticResource Brush03}"/>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,0,0"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{StaticResource Brush09}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="{StaticResource BrushControlButtonPressed}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Grid.Column="2" 
                                Width="30" Margin="0" 
                                BorderBrush="Transparent" 
                                ToolTip="{Binding Path=Control_Button_Close, Source={StaticResource Resources}}"
                                Click="btnExit_Click">
                            <TextBlock Text="🗙" Margin="0,1,5,3" FontSize="13" Foreground="{StaticResource Brush03}"/>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,0,0"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{StaticResource BrushClose}"/>
                                            <Setter Property="Foreground" Value="{StaticResource Brush10}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="{StaticResource BrushControlButtonPressed}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </Grid>
                <!--#endregion-->

                <Border Grid.Row="2" BorderBrush="{StaticResource Brush06}" BorderThickness="0,0,0,0.5" >
                    <StackPanel Orientation="Horizontal" Background="{StaticResource Brush09}">
                        <TextBlock Text="{Binding ValidationTypeHeader}" Foreground="{StaticResource Brush03}" FontWeight="Bold" Margin="10,4,0,2"/>
                        <StackPanel Orientation="Horizontal" Margin="10,4,10,2">
                            <TextBlock Text="{Binding Path=No_Errors_Found, Source={StaticResource Resources}}" 
                                       Visibility="{Binding ErrorLevel, Converter={StaticResource ErrorLevelOKToVisibilityConverter}}"
                                       Foreground="{StaticResource BrushInfo}"
                                       FontWeight="DemiBold"/>
                            <TextBlock Text="{Binding Path=See_Data_Warnings_Below, Source={StaticResource Resources}}" 
                                       Visibility="{Binding ErrorLevel, Converter={StaticResource ErrorLevelWarningToVisibilityConverter}}"
                                       Foreground="{StaticResource BrushWarn}"
                                       FontWeight="DemiBold"/>
                            <TextBlock Text="{Binding Path=See_Data_Errors_Warnings_Below, Source={StaticResource Resources}}" 
                                       Visibility="{Binding ErrorLevel, Converter={StaticResource ErrorLevelErrorToVisibilityConverter}}"
                                       Foreground="{StaticResource BrushError}"
                                       FontWeight="Bold"/>
                        </StackPanel>
                    </StackPanel>
                </Border>

            </Grid>

            <ScrollViewer Grid.Row="2" Grid.Column="1"
                          x:Name="scrollViewer"
                          Style="{StaticResource MainContentScroller}"
                          Background="Transparent" 
                          HorizontalScrollBarVisibility="Auto"
                          VerticalScrollBarVisibility="Auto"
                          PreviewMouseWheel="ScrollViewer_PreviewMouseWheel"
                          Margin="0,0,0,10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TreeView Grid.Row="0"
                              x:Name="tvwSiteErrors" ItemsSource="{Binding SiteConfig}"
                              BorderThickness="0" Padding="0,10,10,0" Margin="0,0,0,0">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                <Setter Property="FontWeight" Value="Normal" />
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="FontWeight" Value="Bold" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.ItemContainerStyle>

                        <TreeView.Resources>

                            <HierarchicalDataTemplate DataType="{x:Type viewmodels:ValidationPanelViewModel}" ItemsSource="{Binding Children}">
                                <StackPanel Orientation="Horizontal" Margin="0,5,0,2">
                                    <Viewbox Width="20" Height="20" Margin="0,0,5,0">
                                        <Path Fill="{Binding ErrorLevel, Converter={StaticResource ErrorLevelToBrushConverter}}"
                                              Data="{Binding ErrorLevel, Converter={StaticResource ErrorLevelToSvgPathDataConverter}}"/>
                                    </Viewbox>
                                    <TextBlock Text="{Binding Name}" Foreground="{StaticResource Brush00}" FontWeight="DemiBold"/>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding Children.Count, Converter={StaticResource NonZeroToVisibilityConverter}}">
                                        <TextBlock Text="[" Foreground="Blue" Margin="0"/>
                                        <TextBlock Text="{Binding TotalErrors}" Foreground="Blue" Margin="0"/>
                                        <TextBlock Text="]" Foreground="Blue"/>
                                    </StackPanel>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type viewmodels:ValidationPageViewModel}" ItemsSource="{Binding Children}">
                                <StackPanel Orientation="Horizontal" Margin="0,5,0,2">
                                    <Viewbox Width="20" Height="20" Margin="0,0,5,0">
                                        <Path Fill="{Binding ErrorLevel, Converter={StaticResource ErrorLevelToBrushConverter}}"
                                              Data="{Binding ErrorLevel, Converter={StaticResource ErrorLevelToSvgPathDataConverter}}"/>
                                    </Viewbox>
                                    <TextBlock Text="{Binding Name}" Foreground="{StaticResource Brush00}" FontWeight="DemiBold"/>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding Children.Count, Converter={StaticResource NonZeroToVisibilityConverter}}">
                                        <TextBlock Text="[" Foreground="Blue" Margin="0"/>
                                        <TextBlock Text="{Binding TotalErrors}" Foreground="Blue" Margin="0"/>
                                        <TextBlock Text="]" Foreground="Blue"/>
                                    </StackPanel>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type viewmodels:ValidationPageItemViewModel}" ItemsSource="{Binding ValidationCodes}">
                                <StackPanel Orientation="Horizontal">
                                    <Viewbox Width="20" Height="20" Margin="0,0,5,0">
                                        <Path Fill="{Binding ErrorLevel, Converter={StaticResource ErrorLevelToBrushConverter}}"
                                              Data="{Binding ErrorLevel, Converter={StaticResource ErrorLevelToSvgPathDataConverter}}"/>
                                    </Viewbox>
                                    <TextBlock Text="{Binding Name}" Foreground="{StaticResource Brush02}" FontWeight="DemiBold"/>
                                    <TextBlock Text="[" Foreground="Blue" Opacity="0.8" FontSize="9" Margin="0"/>
                                    <TextBlock Text="{Binding TotalErrors}" Foreground="Blue" FontSize="9" Margin="0"/>
                                    <TextBlock Text="]" Foreground="Blue" Opacity="0.8" FontSize="9"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                            <DataTemplate DataType="{x:Type viewmodels:ValidationCodeViewModel}">
                                <StackPanel Orientation="Horizontal" Margin="0,0,5,0">
                                    <Viewbox Width="20" Height="20">
                                        <Path Fill="{Binding ErrorLevel, Converter={StaticResource ErrorLevelToBrushConverter}}"
                                              Data="{Binding ErrorLevel, Converter={StaticResource ErrorLevelToSvgPathDataConverter}}"/>
                                    </Viewbox>
                                    <TextBlock Text="{Binding ValidationCode, Converter={StaticResource ValidationCodeToStringConverter}}" Foreground="{StaticResource Brush00}" FontStyle="Italic" Margin="5,0,0,0"/>
                                </StackPanel>
                            </DataTemplate>
                        </TreeView.Resources>

                    </TreeView>


                    <TreeView Grid.Row="1" x:Name="tvwErrors" ItemsSource="{Binding Panels}"
                              Background="{StaticResource Brush10}" BorderThickness="0" Padding="0,0,10,0">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                <Setter Property="FontWeight" Value="Normal" />
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="FontWeight" Value="Bold" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.ItemContainerStyle>

                        <TreeView.Resources>

                            <HierarchicalDataTemplate DataType="{x:Type viewmodels:ValidationPanelViewModel}" ItemsSource="{Binding Children}">
                                <StackPanel Orientation="Horizontal" Margin="0,5,0,2">
                                    <Viewbox Width="20" Height="20" Margin="0,0,5,0">
                                        <Path Fill="{Binding ErrorLevel, Converter={StaticResource ErrorLevelToBrushConverter}}"
                                              Data="{Binding ErrorLevel, Converter={StaticResource ErrorLevelToSvgPathDataConverter}}"/>
                                    </Viewbox>
                                    <TextBlock Text="{Binding Name}" Foreground="{StaticResource Brush00}" FontWeight="DemiBold"/>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding TotalErrors, Converter={StaticResource NonZeroToVisibilityConverter}}">
                                        <TextBlock Text="[" Foreground="Blue" Margin="0"/>
                                        <TextBlock Text="{Binding TotalErrors}" Foreground="Blue" Margin="0"/>
                                        <TextBlock Text="]" Foreground="Blue"/>
                                    </StackPanel>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type viewmodels:ValidationPageViewModel}" ItemsSource="{Binding Children}">
                                <StackPanel Orientation="Horizontal" Margin="0,5,0,2">
                                    <Viewbox Width="20" Height="20" Margin="0,0,5,0">
                                        <Path Fill="{Binding ErrorLevel, Converter={StaticResource ErrorLevelToBrushConverter}}"
                                              Data="{Binding ErrorLevel, Converter={StaticResource ErrorLevelToSvgPathDataConverter}}"/>
                                    </Viewbox>
                                    <TextBlock Text="{Binding Name}" Foreground="{StaticResource Brush00}" FontWeight="DemiBold"/>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding Children.Count, Converter={StaticResource NonZeroToVisibilityConverter}}">
                                        <TextBlock Text="[" Foreground="Blue" Margin="0"/>
                                        <TextBlock Text="{Binding TotalErrors}" Foreground="Blue" Margin="0"/>
                                        <TextBlock Text="]" Foreground="Blue"/>
                                    </StackPanel>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type viewmodels:ValidationPageItemViewModel}" ItemsSource="{Binding ValidationCodes}">
                                <StackPanel Orientation="Horizontal">
                                    <Viewbox Width="20" Height="20" Margin="0,0,5,0">
                                        <Path Fill="{Binding ErrorLevel, Converter={StaticResource ErrorLevelToBrushConverter}}"
                                              Data="{Binding ErrorLevel, Converter={StaticResource ErrorLevelToSvgPathDataConverter}}"/>
                                    </Viewbox>
                                    <TextBlock Text="{Binding Name}" Foreground="{StaticResource Brush02}" FontWeight="DemiBold"/>
                                    <TextBlock Text="[" Foreground="Blue" Opacity="0.8" Margin="0"/>
                                    <TextBlock Text="{Binding TotalErrors}" Foreground="Blue" Margin="0"/>
                                    <TextBlock Text="]" Foreground="Blue" Opacity="0.8" />
                                </StackPanel>
                            </HierarchicalDataTemplate>
                            <DataTemplate DataType="{x:Type viewmodels:ValidationCodeViewModel}">
                                <StackPanel Orientation="Horizontal" Margin="0,0,5,0">
                                    <Viewbox Width="20" Height="20">
                                        <Path Fill="{Binding ErrorLevel, Converter={StaticResource ErrorLevelToBrushConverter}}"
                                              Data="{Binding ErrorLevel, Converter={StaticResource ErrorLevelToSvgPathDataConverter}}"/>
                                    </Viewbox>
                                    <TextBlock Text="{Binding ValidationCode, Converter={StaticResource ValidationCodeToStringConverter}}" Foreground="{StaticResource Brush00}" FontStyle="Italic" Margin="5,0,0,0"/>
                                </StackPanel>
                            </DataTemplate>

                        </TreeView.Resources>

                    </TreeView>
                </Grid>

            </ScrollViewer>

        </Grid>
    </Border>

</Window>